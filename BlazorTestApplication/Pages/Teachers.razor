@page "/teachers"

@inject OtusService OtusService

<div class="top-container">
    <h1>Teachers</h1> 
    <button class="btn btn-dark" @onclick="() => ShowAddTeacher()">Add teacher</button>
</div>


@if (teachers == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Number</th>
                <th>Last Name</th>
                <th>First Name</th>
                <th>Middle Name</th>
                <th>Course</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var teacher in teachers)
            {
                <tr>
                    <td>@teacher.Teacher_Id</td>
                    <td>@teacher.LastName</td>
                    <td>@teacher.FirstName</td>
                    <td>@teacher.MiddleName</td>
                    <td>@teacher.CourseName</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    [CascadingParameter] public IModalService Modal { get; set; }

    private List<TeacherModel> teachers;

    protected override async Task OnInitializedAsync()
    {
        teachers = await OtusService.GetTeachersAsync();
    }

    protected async void ShowAddTeacher()
    {
        var courses = await OtusService.GetCoursesAsync();

        var parameters = new ModalParameters();
        parameters.Add("Courses", courses);

        var addTeacherForm = Modal.Show<TeachersForm>("Add Teacher", parameters);

        var result = await addTeacherForm.Result;

        if (!result.Cancelled && result.Data != null)
        {
            teachers.Add((TeacherModel)result.Data);
            StateHasChanged();
        }
    }
}
